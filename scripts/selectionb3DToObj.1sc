//------------------------------------------------
//--- 010 Editor v8.0.1 Script File
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
//   History: 
//------------------------------------------------

local uint selpos, texindex, pos, pos2, count, count2, length, i, k, z, ID, type, type2;
local float coordX, coordY, coordZ, coordU, coordV;
local int FileIndex, Obj = -1;
local float coord;
local float normalX, normalY, normalZ;
local uint facein1, facein2, facein3;
local string Str, NormalLine, FaceLine, XYZLine, UVLine, FileName, Path;
local uchar Name[32];

string IntToStr (uint i) {
  local string s;
  SPrintf(s, "%d", i);
  return s;
} 

FileIndex = GetFileNum();
Path = FileNameGetPath(FileName) + FileNameGetBase(FileName) + " (objs)\\";
MakeDir(Path); // current dir
SetWorkingDirectory(Path);

// skip to chunks
FSkip(12);
length = ReadInt(FTell())*4;
FSkip(12 + length + 4);

// chunks

UINT chunkTree(UINT ChildCount) 
{
  for ( i = 0; i < ChildCount; ++i )
  {
    ID = ReadInt(FTell());    
    if (ID == 444)
      FSkip(4);
    FSkip(4);
    ReadBytes(Name, FTell(), 32);
    FSkip(32);
    ID = ReadInt(FTell()); 
    FSkip(4);    

    switch ( ID ) 
    {
      case 0: 
      {
        FSkip(44);        
      }; 
      break;
      case 1: 
      {
        FSkip(64);
      }; 
      break;
      case 2: 
      {
        FSkip(32);
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      }; 
      break;
      case 3: 
      {
        FSkip(16);
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      }; 
      break;
      case 4: 
      {
        FSkip(80);
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      }; 
      break;
      case 5: 
      {
        if (Obj < 0)
        { 
          Obj = FileNew("Text"); // create .obj file
          pos = 0;
        };
        TextWriteLine("# " + Name + "\n", pos);
        ++pos;
        FileSelect(FileIndex);       
        FSkip(48);
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      };
      break;
      case 6: 
      {
        FSkip(80);
        count = ReadInt(FTell()); 
        FSkip(4);
        k = 0;
        while (k < count)  
        {
          FSkip(20);
          ++k;
        };      
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      };
      break;
      case 7: 
      {
        TextWriteLine("g " + Name + "\n", pos);
        ++pos;
        FSkip(48);
        count = ReadInt(FTell()); 
        FSkip(4);
        XYZLine = "";
        UVLine = "";
        pos2 = count;
        for ( z = 0; z < count; ++z )  
        {
          coordX = ReadFloat(FTell());
          FSkip(4);
          coordY = ReadFloat(FTell());
          FSkip(4);
          coordZ = ReadFloat(FTell());
          FSkip(4);
          coordU = ReadFloat(FTell());
          FSkip(4);
          coordV = ReadFloat(FTell()); 
          FSkip(4);
          SPrintf(Str, "v %f, %f, %f\n", coordX, coordY, coordZ);
          Strcat(XYZLine, Str);
          SPrintf(Str, "vt %f, %f\n", coordU, coordV);
          Strcat(UVLine, Str);                        
        };   

        FileSelect(Obj);
        // vertex coordinates
        TextWriteLine(XYZLine + "\n", pos);
        pos += pos2;
        // uv coordinates
        TextWriteLine(UVLine + "\n", pos);
        pos += pos2;
        FileSelect(FileIndex);

        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      };
      break;
      case 8: 
      {

        FSkip(16);
        count = ReadInt(FTell()); 
        FSkip(4);

        pos2 = count;
        for ( k = 0; k < count; ++k ) 
        {
          type = ReadInt(FTell()); 
          FSkip(4 + 12);

          count2 = ReadInt(FTell());
          FSkip(4);
  
          switch (type)
          {
            case 131:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(12);
              };
            };
            break;
            case 129:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(4);                
              };
            };
            break;
            case 3:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(12);                
              };
            };
            break;
            case 176:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(16);                
              };
            };
            break;
            case 51:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(16);                
              };
            };
            break;
            case 178:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(20);                 
              };
            };
            break;
            case 179:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(16);                 
              };
            };
            break;
            case 177:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(8);                 
              };
            };
            break;
            case 48:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(16);                 
              };
            };
            break;
            case 50:
            {
              for ( z = 0; z < count2; ++z ) 
              {
                FSkip(24);                 
              };
            };
            break;
            default: 
            {
              facein1 = ReadInt(FTell()) + 1;
              FSkip(4);
              facein2 = ReadInt(FTell()) + 1;
              FSkip(4);
              facein3 = ReadInt(FTell()) + 1;
              FSkip(count2*4 - 8);
              SPrintf(Str, "f %d, %d, %d\n", facein1, facein2, facein3);
              Strcat(FaceLine, Str); 
              if (type == 2)
                FSkip(4*count2); 
            }; 
          };        
        }; 

        FileSelect(Obj);
        // vertex coordinates
        if (FaceLine != "") 
        {
          TextWriteLine(FaceLine + "\n", pos);
          pos += pos2;
        };
        FileSelect(FileIndex); 
      }; 
      break;
      case 9: 
      {
        cfvktfk();
        FSkip(32);
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      };
      break;
      case 10: 
      {
        FSkip(32);
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      };
      break;
      case 11: 
      {
        FSkip(48);
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      };
      break;
      case 12: 
      {
        FSkip(40);
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);
      };
      break;
      case 13: 
      {
        FSkip(24);
        count = ReadInt(FTell()); 
        FSkip(4);  
        FSkip(4*count);          
      };
      break;
      case 14: 
      {
        FSkip(44);       
      };
      break;
      case 16: 
      {
        FSkip(60);       
      };
      break;
      case 17: 
      {
        FSkip(60);       
      };
      break;
      case 18: 
      {
        FSkip(80);       
      };
      break;
      case 19: 
      {
        //
        //Obj = FileNew("Text"); // create .obj file
        //FileName = Name;       // filename
        //FileSelect(FileIndex); 
        //
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);      
      };
      break;
      case 20: 
      {
        count = ReadInt(FTell());
        FSkip(20);
        count2 = ReadInt(FTell()); 
        for ( z = 0; z < count; ++z ) 
        {
          FSkip(12);                 
        };
        FSkip(4*count2);       
      };
      break;
      case 21: 
      {
        FSkip(24);
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);    
      };
      break;
      case 23: 
      {
        FSkip(8);
        type = ReadInt(FTell());
        switch (type)   
        {
          case 3:
          {
            FSkip(12);
            count = ReadInt(FTell()); 
            FSkip(4);
            for ( z = 0; z < count; ++z ) 
            {
              count = ReadInt(FTell()); 
              FSkip(4);   
              for ( k = 0; k < count; ++k ) 
              {
                FSkip(12);                              
              };                           
            };            
          };
          break;
          case 2:
          {
            FSkip(12);
            count = ReadInt(FTell()); 
            FSkip(4);
            for ( z = 0; z < count; ++z ) 
            {
              count = ReadInt(FTell()); 
              FSkip(4);   
              for ( k = 0; k < count; ++k ) 
              {
                FSkip(40);                              
              };                           
            };
          };
          break;
          default:
          {
            count = ReadInt(FTell()); 
            FSkip(4);
            for ( z = 0; z < count; ++z ) 
            {
              count = ReadInt(FTell()); 
              FSkip(4);   
              for ( k = 0; k < count; ++k ) 
              {
                FSkip(12);                              
              };                           
            };
          };
        };  
      };
      break;
      case 24: 
      {
        FSkip(52); 
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);    
      };
      break;
      case 25: 
      {
        FSkip(88);   
      };
      break;
      case 28: 
      {
        FSkip(28);   
        count = ReadInt(FTell()); 
        FSkip(4);
        for ( k = 0; k < count; ++k ) 
        {
          type = ReadInt(FTell());            
          FSkip(16);  
          count = ReadInt(FTell()); 
          FSkip(4);
          for ( z = 0; z < count; ++z ) 
          { 
            if (type == 4294967040) 
            {
              FSkip(8);
            }
            else
            {
              FSkip(16);            
            };                            
          }; 
        };    
      };
      break;
      case 29: 
      {
        FSkip(16);
        type = ReadInt(FTell()); 
        FSkip(32);
        if (type != 3)
          FSkip(4);           
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);    
      };
      break;
      case 30: 
      {
        FSkip(48);
        FSkip(24);
      };
      break;
      case 31: 
      {
        FSkip(16);
        count = ReadInt(FTell()); 
        FSkip(36); 
        for ( k = 0; k < count; ++k ) 
        {
          FSkip(12);                              
        };   
      };
      break;
      case 33: 
      {
        FSkip(88);
        count = ReadInt(FTell());  
        FSkip(4);
        chunkTree(count);  
    
      };
      break;
      case 34: 
      {
        FSkip(20);
        count = ReadInt(FTell()); 
        FSkip(4); 
        for ( k = 0; k < count; ++k ) 
        {
          FSkip(16);                              
        };   
      };
      break;
      case 35: 
      {
        
        FileSelect(FileIndex);
        FSkip(16);
        type = ReadInt(FTell());  
        FSkip(4); 
        texindex = ReadInt(FTell()); 
        FSkip(4); 
        count = ReadInt(FTell()); 
        FSkip(4);
        FaceLine = "";
        pos2 = count;  
         
        for ( k = 0; k < count; ++k ) 
        {     
 
          type2 = ReadInt(FTell());  
          FSkip(16); 
          count2 = ReadInt(FTell());
          FSkip(4);  
          
            switch (type)
            {
              case 3:
              {
                facein1 = ReadInt(FTell()) + 1;
                FSkip(4);
                facein2 = ReadInt(FTell()) + 1;
                FSkip(4);
                facein3 = ReadInt(FTell()) + 1;
                FSkip(4);
                SPrintf(Str, "f %d, %d, %d\n", facein1, facein2, facein3);
                Strcat(FaceLine, Str);
              };
              break;
              case 2:
              {
                switch (type2) 
                {
                  case 49:
                  {
                    FSkip(8*count2);
                  };
                  break;
                  case 51:
                  {
                    FSkip(8*count2);
                  };
                  break;
                  default:
                  {
                    facein1 = ReadInt(FTell()) + 1;
                    FSkip(4);
                    facein2 = ReadInt(FTell()) + 1;
                    FSkip(4);
                    facein3 = ReadInt(FTell()) + 1;
                    FSkip(4);
                    SPrintf(Str, "f %d, %d, %d\n", facein1, facein2, facein3);
                    Strcat(FaceLine, Str);
                    if (type2 == 3) 
                    {
                      FSkip(24);
                    };
                  };                
                  break;
                };              
              };
              break;
              default:
              {
                switch (type2) 
                {
                  case 0:
                  {
                    FSkip(4*count2);
                  };
                  break;
                  case 2:
                  {
                    FSkip(12*count2);
                  };
                  break;
                  default:
                  {
                     for ( z = 0; z < count2; ++z ) 
                     {
                       FSkip(16);
                     };
                     if (type2 == 50) 
                       FSkip(8);
                  };                
                  break;
                };                          
              };                                   
          }; 
        };
        FileSelect(Obj);
        // vertex coordinates
        if (FaceLine != "") 
        {
          TextWriteLine(FaceLine + "\n", pos);
          pos += pos2;
        };
        FileSelect(FileIndex);         
      };
      break;
      case 36: 
      {
        FSkip(80);
        type = ReadInt(FTell());
        FSkip(4); 
        count = ReadInt(FTell()); 
        FSkip(4); 
        if (type == 2) 
        {
          for ( k = 0; k < count; ++k ) 
          {
            FSkip(32);                              
          }; 
        }
        else
        {
          for ( k = 0; k < count; ++k ) 
          {
            FSkip(24);                              
          }; 
        };  
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);   
      };
      break;
      case 37: 
      {
        FileSelect(Obj);
        TextWriteLine("g " + Name + "\n", pos);
        ++pos;
        XYZLine = "";
        UVLine = "";
        NormalLine = "";
        FaceLine = ""; 
        FileSelect(FileIndex); 
        //        
        FSkip(48);
        type = ReadInt(FTell());
        FSkip(4); 
        count = ReadInt(FTell()); 
        FSkip(4); 
        pos2 = count;

        switch (type)
        {
          case 515:
          {
            for ( k = 0; k < count; ++k ) 
            {
              FSkip(40);                              
            }; 
          };
          break;
          case 514:
          {
            for ( k = 0; k < count; ++k ) 
            {
              FSkip(48);                              
            }; 
          };
          break;
          case 258:
          {
            for ( k = 0; k < count; ++k ) 
            {
              FSkip(40);                              
            }; 
          };
          break;
          case 2:
          {
            for ( k = 0; k < count; ++k ) 
            {
              coordX = ReadFloat(FTell());
              FSkip(4);
              coordY = ReadFloat(FTell());
              FSkip(4);
              coordZ = ReadFloat(FTell());
              FSkip(4);

              coordU = ReadFloat(FTell());
              FSkip(4);
              coordV = ReadFloat(FTell()); 
              FSkip(4);

              normalX = ReadFloat(FTell());
              FSkip(4);
              normalY = ReadFloat(FTell());
              FSkip(4);
              normalZ = ReadFloat(FTell());
              FSkip(4);

              SPrintf(Str, "v %f, %f, %f\n", coordX, coordY, coordZ);
              Strcat(XYZLine, Str);
              SPrintf(Str, "vt %f, %f\n", coordU, coordV);
              Strcat(UVLine, Str);
              SPrintf(Str, "vn %f, %f, %f\n", normalX, normalY, normalZ);
              Strcat(NormalLine, Str);                             
            }; 
          };
          break;
          case 3:
          {
            for ( k = 0; k < count; ++k ) 
            {
              coordX = ReadFloat(FTell());
              FSkip(4);
              coordY = ReadFloat(FTell());
              FSkip(4);
              coordZ = ReadFloat(FTell());
              FSkip(4);
              coordU = ReadFloat(FTell());
              FSkip(4);
              coordV = ReadFloat(FTell()); 
              FSkip(4);
              FSkip(4);
              SPrintf(Str, "v %f, %f, %f\n", coordX, coordY, coordZ);
              Strcat(XYZLine, Str);
              SPrintf(Str, "vt %f, %f\n", coordU, coordV);
              Strcat(UVLine, Str);                           
            }; 
          };
          break;
        };

        FileSelect(Obj);
        // vertex coordinates
        TextWriteLine(XYZLine + "\n", pos);
        pos += pos2;
        // uv coordinates
        TextWriteLine(UVLine + "\n", pos);
        pos += pos2;
        if (NormalLine != "")
        {
          // normal coordinates
          TextWriteLine(NormalLine + "\n", pos);
          pos += pos2;
        };
        FileSelect(FileIndex);

        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);  
 
      };
      break;
      case 39: 
      {
        FSkip(36);        
        count = ReadInt(FTell()); 
        FSkip(4);
        chunkTree(count);    
      };
      break;
      case 40: 
      {
        FSkip(80);         
        FSkip(8);
        count = ReadInt(FTell()); 
        FSkip(4*count);  
      };
    };
    ID = ReadInt(FTell()); 
    while (ID == 444) 
    {  
      FSkip(4);
      ID = ReadInt(FTell()); 
    };
    FSkip(4); // skip chunk Name
  };
  return 0;
};

selpos = GetSelStart();
FSeek(selpos);
ID = ReadInt(FTell());    
if (ID == 444)
  FSkip(4);
FSkip(4);
ReadBytes(Name, FTell(), 32);
FSkip(32);
ID = ReadInt(FTell()); 

if (ID == 5)
{
  FSeek(selpos);
  chunkTree(1);
};
